---
- name: install unzip
  apt: pkg=unzip state=present update_cache=yes

#- name: Create service account for Kibana
#  user: name=kibana
#        system=yes
#        home=/var/lib/kibana
#        shell=/bin/false
#        state=present

- name: Download Kibana
  get_url: url=https://download.elasticsearch.org/kibana/kibana/kibana-{{ kibana_version }}-{{ kibana_os }}-{{ kibana_arch }}.zip
           dest=/usr/local/src/kibana-{{ kibana_version }}-{{ kibana_os }}-{{ kibana_arch }}.zip

- name: Extract and install Kibana
  unarchive: src=/usr/local/src/kibana-{{ kibana_version }}-{{ kibana_os }}-{{ kibana_arch }}.zip
             dest={{ kibana_dir }}
             copy=no
             creates={{ kibana_dir }}/kibana-{{ kibana_version }}-{{ kibana_os }}-{{ kibana_arch }}

- name: Configure Kibana
  template: src=kibana.yml.j2
            dest={{ kibana_dir }}/kibana-{{ kibana_version }}-{{ kibana_os }}-{{ kibana_arch }}/config/kibana.yml
  notify:
    - Restart Kibana

- name: Configure Kibana service definition
  template: src=kibana.conf.j2 dest=/etc/init/kibana.conf
  notify:
    - Restart Kibana

- name: Configure Kibana to use Gaode Map
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: "_map.js", dest: "{{ kibana_dir }}/kibana-{{ kibana_version }}-{{ kibana_os }}-{{ kibana_arch }}/{{ kibana_gaode_config_map_js_location }}" }
    - { src: "kibana.bundle.js", dest: "{{ kibana_dir }}/kibana-{{ kibana_version }}-{{ kibana_os }}-{{ kibana_arch }}/{{ kibana_gaode_config_bundle_js_location }}" }
  notify:
    - Restart Kibana

- name: Touch log file if it does not exist
  command: touch {{ kibana_log }}
           creates={{ kibana_log }}

- name: Configure Kibana log rotation
  template: src=logrotate_kibana.j2 dest=/etc/logrotate.d/kibana
